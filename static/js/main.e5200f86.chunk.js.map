{"version":3,"sources":["images/airplane.jpg","components/App/App.js","components/Footer/Footer.js","redux/constants/actionTypes.js","components/Options/Options.js","redux/actions/flightActions.js","components/Row/Row.js","components/Search/Search.js","components/Table/Table.js","redux/store.js","redux/reducers/flightReducer.js","index.js"],"names":["App","id","className","src","img1","alt","Footer","Date","getFullYear","ActionTypes","Options","React","useState","value","setValue","dispatch","useDispatch","StylesProvider","injectFirst","Paper","square","Tabs","indicatorColor","textColor","onChange","event","newValue","type","payload","aria-label","Tab","label","Row","time","direction","flight","company","status","message","Search","inputVal","setInputVal","inputValModified","replaceAll","toLowerCase","state","useSelector","toFrom","way","howMuchToSlice","length","fetchData","axios","get","dateObj","day","getUTCDate","month","getUTCMonth","getUTCFullYear","currentFormatedDate","then","res","flights","data","body","filter","slice","fltNo","customFilter","catch","err","errorHappened","console","log","useEffect","toggleFetching","placeholder","e","target","onClick","Table","table","flightTime","category","map","ID","actual","city","directionAbbriviation","carrierID","airline","en","name","formatedTime","date","setTime","getTime","hours","getHours","minutes","getMinutes","formatTime","formatedStatus","formatStatus","isFetched","error","errorMessage","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5200f86.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/airplane.a72ab1a1.jpg\";","import React from \"react\";\nimport \"./app.css\";\nimport img1 from \"../../images/airplane.jpg\";\nimport { Search, Options, Table, Footer } from \"../\";\n\nfunction App() {\n  return (\n    <div id=\"page-container\">\n      <div id=\"content-wrap\">\n        <img className=\"airplane-img\" src={img1} alt=\"airplane.jpg\" />\n        <h1 className=\"heading\">Розклад аеропорт “Київ”</h1>\n        <div className=\"container\">\n          <Search />\n          <Options />\n          <Table />\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div id=\"footer\">\r\n      <p>\r\n        Copyright &copy;\r\n        {new Date().getFullYear()}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export const ActionTypes = {\r\n  FLIGHTS: \"FLIGHTS\",\r\n  WAY: \"WAY\",\r\n  TRIGGER_FETCHING: \"TRIGGER_FETCHING\",\r\n  ERROR: \"ERROR\",\r\n};\r\n","import React from \"react\";\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleWay } from \"../../redux/actions/flightActions\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport \"./options.css\";\r\n\r\nfunction Options() {\r\n  const [value, setValue] = React.useState(\"departure\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    dispatch(toggleWay(newValue));\r\n  };\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <Paper square>\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={handleChange}\r\n          aria-label=\"tabs\"\r\n        >\r\n          <Tab value=\"departure\" label=\"&#8599; ВІДПРАВЛЕННЯ\" />\r\n          <Tab value=\"arrival\" label=\"&#8600; ПРИБУТТЯ\" />\r\n        </Tabs>\r\n      </Paper>\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import { ActionTypes } from \"../constants/actionTypes\";\r\n\r\nexport const receivedFlights = (flights) => {\r\n  return {\r\n    type: ActionTypes.FLIGHTS,\r\n    payload: flights,\r\n  };\r\n};\r\n\r\nexport const toggleWay = (way) => {\r\n  return {\r\n    type: ActionTypes.WAY,\r\n    payload: way,\r\n  };\r\n};\r\n\r\nexport const triggerFetching = () => {\r\n  return {\r\n    type: ActionTypes.TRIGGER_FETCHING,\r\n  };\r\n};\r\n\r\nexport const errorHappened = (err) => {\r\n  return {\r\n    type: ActionTypes.ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./row.css\";\r\n\r\nfunction Row({ time, direction, flight, company, status, message }) {\r\n  if (message) {\r\n    return <h5>{message}</h5>;\r\n  } else {\r\n    return (\r\n      <tr>\r\n        <td>{time}</td>\r\n        <td>{direction}</td>\r\n        <td>{flight}</td>\r\n        <td>{company}</td>\r\n        <td>{status}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport \"./search.css\";\r\nimport {\r\n  receivedFlights,\r\n  triggerFetching,\r\n  errorHappened,\r\n} from \"../../redux/actions/flightActions\";\r\n\r\nfunction Search() {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const inputValModified = inputVal.replaceAll(\" \", \"\").toLowerCase();\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const toFrom = state.way === \"departure\" ? \"To\" : \"From\";\r\n  const howMuchToSlice = inputValModified.length === 1 ? 1 : 2;\r\n\r\n  function currentFormatedDate() {\r\n    const dateObj = new Date();\r\n    let day = dateObj.getUTCDate();\r\n    let month = dateObj.getUTCMonth() + 1;\r\n    const year = dateObj.getUTCFullYear();\r\n    if (day < 10) day = \"0\" + day;\r\n    if (month < 10) month = \"0\" + month;\r\n    return day + \"-\" + month + \"-\" + year;\r\n  }\r\n\r\n  function handleInputChange(e) {\r\n    setInputVal(e.target.value);\r\n  }\r\n\r\n  function handleSearchClick() {\r\n    dispatch(triggerFetching());\r\n  }\r\n\r\n  // The function customFilter below is used to return flights that match the data typed by user.\r\n  function customFilter(flight) {\r\n    // If inputVal is true it means that the user typed some data and we need to filter our flights in accordance.\r\n    if (inputVal) {\r\n      return (\r\n        // Here we compare the data typed by the user with the city name of the flight.\r\n        // If the condition below is true, we return the flight.\r\n        inputValModified ===\r\n          flight[`airport${toFrom}ID.city`]\r\n            .toLowerCase()\r\n            .slice(0, inputValModified.length) ||\r\n        // Otherwise, we check the data typed by the user with the flight number. And to be returned,\r\n        // the flight must meet two of the following criteria.\r\n        // First, we check if the first or the first and the second characters of the data typed by the user\r\n        // is equal to the carrierID of the flight. If the condition is met, we continue to the second step.\r\n        (inputValModified.slice(0, howMuchToSlice) ===\r\n          flight[\"carrierID.IATA\"].toLowerCase().slice(0, howMuchToSlice) &&\r\n          // The second step checks if the data that follows the carrierID is equal to the flight number.\r\n          // If the two of the last criteria are met, we return the flight.\r\n          inputValModified.slice(2) ===\r\n            flight.fltNo.slice(0, inputValModified.slice(2).length))\r\n      );\r\n    } else {\r\n      return flight;\r\n    }\r\n  }\r\n\r\n  function fetchData() {\r\n    axios\r\n      .get(`https://api.iev.aero/api/flights/${currentFormatedDate()}`)\r\n      .then((res) => {\r\n        dispatch(\r\n          receivedFlights(\r\n            res.data.body[state.way].filter((flight) => {\r\n              return customFilter(flight);\r\n            })\r\n          )\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        dispatch(errorHappened(err));\r\n        console.log(\"Error:\", err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [state.toggleFetching, inputVal]);\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <div className=\"input-group mb-3\">\r\n        <i className=\"fas fa-search fa-1.5x\"></i>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          value={inputVal}\r\n          className=\"form-control\"\r\n          placeholder=\"Номер рейсу або місто\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          id=\"button\"\r\n          className=\"btn btn-primary\"\r\n          type=\"button\"\r\n          onClick={handleSearchClick}\r\n        >\r\n          Пошук\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./table.css\";\r\nimport { Row } from \"../\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Table() {\r\n  const data = useSelector((state) => state);\r\n  const way = data.way === \"departure\" ? \"To\" : \"From\";\r\n  const flightTime =\r\n    data.way === \"departure\" ? \"timeDepShedule\" : \"timeToStand\";\r\n  const category = data.way === \"departure\" ? \"'ВІДПРАВЛЕННЯ'\" : \"'ПРИБУТТЯ'\";\r\n\r\n  // \"display\"(the function below) is the function that returns either a table with a list of flights or a message.\r\n  // The way it works:\r\n  // - checks if there are any flights in the state/data,\r\n  //    if the array of flights is not empty then it returns the table\r\n  //    (which is passed to the function as an argument) with the list of flights;\r\n  // - otherwise, checks if data was fetched and there is no error, if both criteria are true then returns responsible message.\r\n  // - otherwise, checks if there was an error, if true, then display the error;\r\n  // - otherwise, it means that the data is being fetched, and therefore the program displays \"Loading...\" message.\r\n  const display = (table) => {\r\n    if (data.flights.length > 0) {\r\n      return table;\r\n    } else if (data.isFetched && !data.error) {\r\n      return (\r\n        <Row\r\n          message={`Рейсів за вказаними даними у категорії ${category} немає.`}\r\n        />\r\n      );\r\n    } else if (data.error) {\r\n      return (\r\n        <Row\r\n          message={`Сталась помилка. Будь ласка, спробуйте пізніше. ${data.errorMessage}`}\r\n        />\r\n      );\r\n    } else {\r\n      return <Row message={\"Loading...\"} />;\r\n    }\r\n  };\r\n\r\n  function formatTime(actual) {\r\n    let date = new Date(actual);\r\n    /* date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);  */\r\n    date.setTime(date.getTime());\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    if (hours < 10) hours = \"0\" + hours;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  function formatStatus(status) {\r\n    switch (status) {\r\n      case \"LN\":\r\n        return \"Прибув\";\r\n      case \"ON\":\r\n        return \"Вчасно\";\r\n      case \"DP\":\r\n        return \"Вилетів\";\r\n      case \"CK\":\r\n        return \"Реєстрація\";\r\n      case \"FR\":\r\n        return \"В польоті\";\r\n      case \"GC\":\r\n        return \"Посадка\";\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n\r\n  return display(\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ЧАС</th>\r\n          <th>НАПРЯМОК</th>\r\n          <th>РЕЙС</th>\r\n          <th>КОМПАНІЯ</th>\r\n          <th>СТАТУС</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.flights.map((flight) => {\r\n          const {\r\n            ID,\r\n            [flightTime]: actual,\r\n            [`airport${way}ID.city`]: city,\r\n            [`airport${way}ID.IATA`]: directionAbbriviation,\r\n            \"carrierID.IATA\": carrierID,\r\n            fltNo,\r\n            airline: {\r\n              en: { name: company },\r\n            },\r\n            status,\r\n          } = flight;\r\n\r\n          const formatedTime = formatTime(actual);\r\n          const formatedStatus = formatStatus(status);\r\n\r\n          return (\r\n            <Row\r\n              key={ID}\r\n              time={formatedTime}\r\n              direction={`${city} (${directionAbbriviation})`}\r\n              flight={`${carrierID} ${fltNo}`}\r\n              company={company}\r\n              status={formatedStatus}\r\n            />\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import { createStore } from \"redux\";\r\nimport { flightReducer } from \"./reducers/flightReducer\";\r\n\r\nconst initialState = {\r\n  flights: [],\r\n  way: \"departure\",\r\n  isFetched: false,\r\n  error: false,\r\n  errorMessage: \"\",\r\n  toggleFetching: false,\r\n};\r\n\r\nconst store = createStore(\r\n  flightReducer,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import { ActionTypes } from \"../constants/actionTypes\";\r\n\r\nexport const flightReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.FLIGHTS:\r\n      return { ...state, flights: payload, isFetched: true, error: false };\r\n    case ActionTypes.WAY:\r\n      return {\r\n        ...state,\r\n        flights: [],\r\n        way: payload,\r\n        toggleFetching: !state.toggleFetching,\r\n        isFetched: false,\r\n        error: false,\r\n      };\r\n    case ActionTypes.TRIGGER_FETCHING:\r\n      return {\r\n        ...state,\r\n        flights: [],\r\n        toggleFetching: !state.toggleFetching,\r\n        isFetched: false,\r\n        error: false,\r\n      };\r\n    case ActionTypes.ERROR:\r\n      return {\r\n        ...state,\r\n        flights: [],\r\n        isFetched: true,\r\n        error: true,\r\n        errorMessage: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}